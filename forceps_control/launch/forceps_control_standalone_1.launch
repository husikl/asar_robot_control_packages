<launch>

  <arg name="prefix" default=""/>
  <param name="prefix" value="$(arg prefix)"/>

  <arg name="name" default=""/>
  <param name="name" value="$(arg name)"/>



  <!-- <param name="thread_sampling_freq_hz" value="300"/> -->

  <param name="robot_description" textfile="$(find forceps_control)/urdf/forceps.urdf"/>



  <group ns ="/forceps">

      <!-- Forceps ID -->
    <arg name="forceps_identifier" default="1" />
    <param name="forceps_id" value="$(arg forceps_identifier)"/>

    <!-- DAQ channels configuration for Motor 0 (Pitch) -->
    <arg name="m0_current_ai_ch" default="3" />
    <param name="m0_current_ai_ch" value="$(arg m0_current_ai_ch)"/>
    <arg name="m0_photosensor_ai_ch" default="11" />
    <param name="m0_photosensor_ai_ch" value="$(arg m0_photosensor_ai_ch)"/>
    <arg name="m0_control_ch" default="3" />
    <param name="m0_control_ch" value="$(arg m0_control_ch)"/>
    <arg name="m0_encoder_ch" default="3" />
    <param name="m0_encoder_ch" value="$(arg m0_encoder_ch)"/>

    <!-- DAQ channels configuration for Motor 1 (Left Grasper) -->
    <arg name="m1_current_ai_ch" default="5" />
    <param name="m1_current_ai_ch" value="$(arg m1_current_ai_ch)"/>
    <arg name="m1_photosensor_ai_ch" default="13" />
    <param name="m1_photosensor_ai_ch" value="$(arg m1_photosensor_ai_ch)"/>
    <arg name="m1_control_ch" default="5" />
    <param name="m1_control_ch" value="$(arg m1_control_ch)"/>
    <arg name="m1_encoder_ch" default="5" />
    <param name="m1_encoder_ch" value="$(arg m1_encoder_ch)"/>

    <!-- DAQ channels configuration for Motor 2 (Right Grasper)-->
    <arg name="m2_current_ai_ch" default="4" />
    <param name="m2_current_ai_ch" value="$(arg m2_current_ai_ch)"/>
    <arg name="m2_photosensor_ai_ch" default="12" />
    <param name="m2_photosensor_ai_ch" value="$(arg m2_photosensor_ai_ch)"/>
    <arg name="m2_control_ch" default="4" />
    <param name="m2_control_ch" value="$(arg m2_control_ch)"/>
    <arg name="m2_encoder_ch" default="4" />
    <param name="m2_encoder_ch" value="$(arg m2_encoder_ch)"/>

    <!-- Engage sensor voltage threshold  -->
    <arg name="m0_engage_sensor_threshold" default="0.15" />
    <param name="m0_engage_sensor_threshold" value="$(arg m0_engage_sensor_threshold)"/>
    <arg name="m1_engage_sensor_threshold" default="0.15" />
    <param name="m1_engage_sensor_threshold" value="$(arg m1_engage_sensor_threshold)"/>
    <arg name="m2_engage_sensor_threshold" default="0.15" />
    <param name="m2_engage_sensor_threshold" value="$(arg m2_engage_sensor_threshold)"/>
  

    <param name="cyclic_time_usec" value="8000"/>
    <arg name="use_sim" default="false" />
    <param name="use_sim" value="$(arg use_sim)" type="bool"/>

    <rosparam file="$(find forceps_control)/config/joint_limits.yaml" command="load"/>
      <rosparam file="$(find forceps_control)/config/controller_act2.yaml" command="load"/>
    <!-- <rosparam file="$(find forceps_control)/config/controller.yaml" command="load"/> -->
    <node name="forceps_control" pkg="forceps_control" type="forceps_control_node" output="screen" />
    
      <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="
        joint_state_controller
        effort_controller
      "/>
  
  </group>

  <!-- <node name="gen3_gui" pkg="forceps_control" type="gen3_gui_node" output="screen" /> -->
  <!-- <node name="gen3_planner" pkg="forceps_control" type="gen3_planner_node" output="screen" />
  <node name="gen3_example" pkg="forceps_control" type="gen3_example_node" output="screen" /> -->





  <node name="asar_gui_node" pkg="asar_control" type="asar_gui_node" output="screen" />
  <!-- <node name="keyboard_cmd" pkg="forceps_control" type="keyboard_cmd_node" output="screen" /> -->

  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"> -->
  <!-- <remap from="/joint_states" to="/sim/joint/state" /> -->
  <!-- <remap from="/tf" to="/sim/tf" /> -->
<!-- </node> -->

</launch>
