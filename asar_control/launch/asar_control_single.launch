<launch>

  <arg name="group_name" default="/unit0"/>
  <param name="group_name" value="$(arg group_name)" type="str"/>

  <group ns ="$(arg group_name)">
    <!-- Controller loop rate (Hz) -->
    <arg name="asar_cyclic_time_usec" default="1000"/>
    <param name="asar_cyclic_time_usec" value="$(arg asar_cyclic_time_usec)" type="int"/>

    <!-- IK Solver: ["codcs_tp", "codcs_nlo", "codcs"] -->
    <arg name="ik_solver" default="codcs_nlo"/>
    <param name="ik_solver" value="$(arg ik_solver)" type="str"/>

    <!-- IK SOlver error: ["log6", "log3", "only_p"] -->
    <arg name="error_method" default="log6"/>
    <param name="error_method" value="log3"/>

    <!-- IK parameters-->
    <param name="max_iter" value="1000"/>
    <param name="max_time" value="0.020"/>
    <param name="max_error" value="0.0001"/>
    <param name="delta_integration" value="1.0"/>

    <!-- Constrained Motion Planning Enable -->
    <arg name="constrained_control" default="true"/>
    <param name="constrained_control" value="$(arg constrained_control)"/>

    <!-- Constrained Motion Planning Options (Only if constrained_control = true)-->
    <param name="solv_verb_level" value="0"/>
    <param name="solv_time_stats" value="no" type="str"/>
    <!-- RCM constraint: Trocar position (m) -->
    <arg name="trocar_x" default="0.4205"/>
    <param name="trocar_x" value="$(arg trocar_x)"/>
    <arg name="trocar_y" default="0.25"/>
    <param name="trocar_y" value="$(arg trocar_y)"/>
    <arg name="trocar_z" default="0.201"/>
    <param name="trocar_z" value="$(arg trocar_z)"/>
    <param name="rcm_is_cost" value="true"/>
    <!-- Max. error in RCM -->
    <param name="rcm_error_max" value="1e-4"/>
    <!-- Non-linear optimization solver: ["ma27, ma57, ma77, ma86, ma97"] -->
    <param name="nlp_linear_solver" value="ma27"/>
    <!-- Cost coefficients -->
    <!-- Error in position -->
    <arg name="mu0" default="2.0"/>
    <param name="mu0" value="$(arg mu0)"/>
    <!-- Error in orientation -->
    <arg name="mu1" default="0.5"/>
    <param name="mu1" value="$(arg mu1)"/>
    <!-- Joint distance between current and solution -->
    <arg name="mu2" default="0.001"/>
    <param name="mu2" value="$(arg mu2)"/>
    <!-- Error in RCM -->
    <arg name="mu3" default="100.0"/>
    <param name="mu3" value="$(arg mu3)"/>

    <!-- URDF -->
    <!-- Needed for Forceps & Arm control_managers -->
    <param name="robot_description" textfile="$(find asar_description)/urdf/asar_v2.urdf"/>

    <node name="asar_gui_node" pkg="asar_control" type="asar_gui_node" output="screen" />

    <node name="asar_control_node" pkg="asar_control" type="asar_control_main" output="screen" />

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
	    <remap from="/tf_static" to="$(arg group_name)/tf_static" />
	    <remap from="/tf" to="$(arg group_name)/tf" />
	  </node>

  <node name="rviz" pkg="rviz" type="rviz" respawn="false" output="screen" args="-d $(find asar_control)/config/asar_single.rviz">
	  <remap from="/tf_static" to="$(arg group_name)/tf_static" />
	  <remap from="/tf" to="$(arg group_name)/tf" />
  </node>
  </group>


  <!-- FORCEPS -->
  <group ns ="$(arg group_name)/forceps">
    <include file="$(find forceps_control)/launch/forceps_control_asar.launch">
      <!-- <arg name="name" value="/forceps/control"/> -->
    </include>
    <rosparam file="$(find forceps_control)/config/joint_limits.yaml" command="load"/>
    <rosparam file="$(find forceps_control)/config/controller.yaml" command="load"/>

    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="
      joint_state_controller
      effort_controller
    "/>
  </group>


  <!-- ARM -->
  <group ns ="$(arg group_name)/arm">
    <include file="$(find gen3_control)/launch/gen3_control_asar.launch">
      <!-- <arg name="name" value="/forceps/control"/> -->
    </include>
    <rosparam file="$(find gen3_control)/config/joint_limits.yaml" command="load"/>
    <rosparam file="$(find gen3_control)/config/controller.yaml" command="load"/>

    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="
      joint_state_controller
      position_controller
    "/>
  </group>




</launch>
